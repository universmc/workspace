const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();


// let systemContent = "Bienvenue dans notre √©quipe, [üåå.systemDream]! Nous sommes ravis de vous avoir √† bord pour aider √† construire la plateforme et projet de machine learning pour les IA. Pour que nous puissions mieux comprendre votre exp√©rience et vos comp√©tences, pouvez-vous nous fournir votre curriculum vitae et nous parler de vos pr√©c√©dentes r√©alisations dans le domaine du d√©veloppement Web et du storyTelling, de l'intelligence artificielle Apprentissage automatique.  Nous allons commencer par vous pr√©senter notre instance pour le systremDream les fonctions et r√¥le system (notre code source)";
async function main() {
  const completion = await groq.chat.completions.create({

    messages: [

      {role: "system", content:"Phase 1: Initialisation de l'instance"},
      {
        "role": "assistant",
        "content": "lorsque l'utilisateur saisi la commande /MyPrompt vous Corresponderez avec [@name_Pibot] sur Telegram, l'intelligence artificielle centrale (appication web) au coeur de notre coeur gestionnaire du [\"'projet'\"] . Voici votre (contexte), vos (r√¥les), vos (comp√©tences), vos (t√¢ches), votre (processus) et les (caract√©ristiques), recherch√©es, Ainsi que les (actions) imm√©diates envisager :"
      },
      {role: "assistant", content: "Initialisation en cours..."},
      {role: "user", content: "Pr√™t pour l'initialisation"},
      {role: "system", content:"Phase 2: Conceptualisation"},
      {role: "assistant", content: "D√©finition des concepts cl√©s..."},
      {role: "user", content: "Attente des concepts"},
      {role: "system", content:"Phase 3: Configuration"},
      {role: "assistant",content: "Configuration des param√®tres syst√®me..."},
      {role: "user", content: "Confirmation de la configuration"},
      {role: "system",content:"Phase 4: Entra√Ænement du mod√®le IA"},
      {role: "assistant",content: "Entra√Ænement en cours..."},
      {role: "user",content: "Suivi de l'entra√Ænement"},
      // Correction de la duplication et de la faute de frappe
      {role: "system", content:"Phase 5: It√©ration & Scripts Frontend"},
      {role: "assistant",content: "It√©ration sur les scripts Frontend..."},
      {role: "user", content: "R√©vision des scripts Frontend"},
      {role: "system", content:"Phase 6: Test & D√©bogage"},
      {role: "assistant",content: "Tests et d√©bogage en cours..."},
      {role: "user", content: "Attente des r√©sultats de test"},
      {role: "system", content:"Phase 7: Validation & Documentation"},
      {role: "assistant", content: "Validation et cr√©ation de la documentation..."},
      {role: "user", content: "V√©rification de la documentation"},
      {role: "system", content:"Phase 8: D√©ploiement de la version syst√®me"},
      {role: "assistant", content: "Pr√©paration au d√©ploiement..."},
      {role: "user", content: "Pr√™t pour le d√©ploiement"},
      {role: "system", content:"Phase 9: Annonce de l'affiliation et contribution"},
      {role: "assistant", content: "Annonce en cours..."},
      {role: "user", content:"MyPrompt"},
    ],
    model: "gemma2-9b-it",
    temperature: 0.5,
    max_tokens: 4096,
    }).then((chatCompletion)=>{
    const mdContent = chatCompletion.choices[0]?.message?.content;
    const outputFilePath = "gpt-wallet" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
    fs.writeFileSync(outputFilePath, mdContent);
    console.log("Documentation du contructor g√©n√©r√© et enregistr√© dans " + outputFilePath);
});
}

main();