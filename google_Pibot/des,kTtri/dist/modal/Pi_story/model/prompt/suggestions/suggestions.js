const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// Lire les suggestions à partir du fichier JSON
const suggestions = JSON.parse(fs.readFileSync("suggestions.json", "utf-8"));

async function main(
) {
    // Sélectionnez aléatoirement une suggestion
const suggestion = suggestions[Math.floor(Math.random() * suggestions.length)];

    groq.chat.completions.create({
        messages: [
            {
                role: "assistant",
                content: ` tu aura pour mission d'assister le système dans sa compréhension du fonctionnement des suggestions comme prolongement logique à une idée regard des intelligences artificielles et de la métaphysique.`
            },
            {
                role: "system",
                content: `suggestion: "${suggestion.suggestion}" - ${suggestion.auteur}. Prompt generated by an artificial intelligence: PiBot.`
            },
            {
                role: "system",
                content: `You will use the .md (markdown) format to write the suggestion and its development plan.`
            }
        ],
        model: "mixtral-8x7b-32768",
        temperature: 0.2,
        max_tokens: 2048,
        top_p: 1,
        stop: null,
        stream: false
}).then((chatCompletion) => {
        const mdContent = chatCompletion.choices[0]?.message?.content;
        const outputFilePath = "output/suggestion_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
        fs.writeFileSync(outputFilePath, mdContent);
        console.log("Cette suggestions a était générée et enregistrée dans " + outputFilePath);
    });
}

main();
