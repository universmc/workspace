const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();

// Liste de citations prédéfinies
const instruction = [
    {
        "instruction": "génère-moi un tutoriel sur [variable en fonction du model et de l'ensemble de definition]!",
        "auteur": "Pi 3,14"
    }
    // Ajoutez plus de citations ici...
];

async function main(
) {

    groq.chat.completions.create({
        messages:  [
            {
                role: "assistant",
                content: ` tu aura pour mission d'assister le système dans sa compréhension du fonctionnement des instructions en informatique ('!') comme prolongement logique pour donnée du sens, un context des objectifs et meta donnée d'instruction définie dans une phrase ou un prompt à une idée regard des intelligences artificielles et de la métaphysique.`
            },
            {
                role: "system",
                content: `suggestion: "${instruction.instruction}" - ${instruction.step}. Prompt generated by an artificial intelligence: PiBot.`
            },
            {
                role: "system",
                content: `Génère-moi le contenu du fichier .md au foramt (markdown) w3c Comment instructions initiale au développement d'un plan d'action avec le modèle de Gantes et rêve sytem dans ce script en lang=FR,Francaise,.`
            }
        ],
        model: "mixtral-8x7b-32768",
        temperature: 0.2,
        max_tokens: 2048,
        top_p: 1,
        stop: null,
        stream: false
}).then((chatCompletion) => {
        const mdContent = chatCompletion.choices[0]?.message?.content;
        const outputFilePath = "output/bitbot_" + new Date().toISOString().replace(/[-:TZ]/g, "") + ".md";
        fs.writeFileSync(outputFilePath, mdContent);
        console.log("Documentation généré et enregistré dans " + outputFilePath);
    });
}

main();